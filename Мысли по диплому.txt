«Разработка системы оптимизации автоматического развертывания микросервисных приложений в облачной инфраструктуре на основе генетических алгоритмов».  Подразумевается применение генетического алгоритма для оптимального размещения приложений на серверах с учетом потребления памяти, необходимой ОС и других требований инфраструктуры.  Цель — задействовать как можно меньшее кол-во виртуальных машин.

«Разработка системы автоматического развертывания микросервисных приложений в облачной инфраструктуре на основе алгоритма комбинаторной оптимизации». 

задача упаковки 
Почему генетический: Существует множество различных схем аппроксимации. Тем не менее, они сильно зависят от формулировки задачи о рюкзаке. Например, если в условии появляется второе ограничение типа неравенства (двухмерный рюкзак), то задача уже не имеет известной схемы полиномиального времени[17].
Также в татьях написано, почему используют именно генетический алгоритм

хромосома содержит случайное распределение по серверам - один из вариантов решения задачи - как представить хромосому? Просто классом?
создаем начальную популяцию - просто рандомом
нужно создать целевую функцию и с помощью функции приспособленности понять, какие гены насколько близкое решение дают
у Инны функция приспособленности сразу говорит, наскольок близко мы к решению. У нее - к нулю.
скрещиваем 10 родителей и получаем 10 детей. Скольоко надо скрещивать родителей и скольок плучать детей?
когда проверять на оптимальность решенеия? перед первой же итерацией или после скрещивания и мутации?

Задача оптимального размещения программных компонентов на серверах сводится в общем случае к задаче об упаковке объектов предопределённой формы в конечное число контейнеров предопределённой формы и является NP-трудной. Использование точного переборного алгоритма возможно только при небольших размерностях. Обычно для решения задачи используют эвристические приближённые полиномиальные алгоритмы и другие методы решения задач комбинаторной оптимизации, как имитация отжига [7] и генетические алгоритмы[8]. Перед тем, как рассмотреть данные алгоритмы подробнее, проведем поиск существующих решений в данной области.


Отдельный раздел в конце – цели и задачи работы - сделал
Цель сделать из названия - сделал.
Задачи: пункт 2 нужна модель для симуляции. Нужна система, где можно все смоделировать, нужно написать симулятор. Это задача номер 2.
Патентный обзор отдельно задачей - сделал.
Проанализирвать существующий рещения по развертыванию ПО на северных фермах. Потом патенты. Потом сущ. Алгорритмы и то, что собыраюсь использваоть – это пока не писать, реализация алгоритма, иссселдование работы алгоритма. Технико-экономическое обоснование - сделал. 
Нужно схема L2 и L3, докер, соврем вычисления, есть цоды, есть микросервисы, содержит сотни севрисов одно приложение. Как из разворацичвают, как этим управлять, пирамида автоматизации, т.е. это все применияет на L3. L2 не использует оркерстаторы, т.к. ограниченное кол-во серверов, но на l2 тоже используют микросевисы.на l2 также нужен алгоритм для решения задачи распредедения поленой нагрузки. 

Начал с пирамиды автоматизации. Дальше пишу что есть ЦОДы, микросервисы и монолит, контейнеризация, управление контейнерами, балансировка в облаках, патенты, в конце - на уровне АСУТП нет кубера и т.п. - значит нужно собственное решение. цели задачи вывод по главе. нужен ли пример с системой слежения?
алгоритмы, такие как имитация отжига, генетика. и другие?
как эти данные засовывать в алгоритм? отдельный сервис, реализующий генетику, отжиг, эвристика?

является задействование как можно меньшего количества виртуальных машин при размещении приложений на серверах с учетом необходимого количества оперативной памяти, памяти на жестком диске, необходимой операционной системы, типа процессора, учитывая ограничения на уровень автоматизации серверов (уровень автоматизированных систем управления предприятием или уровень  автоматизированных систем управления технологическим процессом).
и логического уровня сервера для снижения издержек на аренду и обслуживание ресурсов ЦОД.


сделать из прототипа генетического норм веб сервис и туда кидать данные из симулятора
При создании сервера в генетическом алгоритме делать список сервисов пустым. а свободное место указывать, сколько там было метса до очистки списка сервисов

Нужно давать коэффициент тем больше, чем свободного места на сервере меньше
мс полимерный герметик


А о самом интересном-то и не написали. Почему вероятность перехода именно exp(-dE/T)?
Собственно, в этом и сидит физический аспект алгоритма.
Чистая термодинамика и никакой магии.
Вероятность пребывания системы в состоянии с энергией E при температуре T равна C*exp(-E/T), где С — нормировочный множитель. Это свойство общее для любых макроскопических систем и известно под названием распределения Гиббса. Вероятность состояния с энергией повыше равна, соответственно, C*exp(-(E+dE)/T).

А вероятность перехода между двумя этими состояниями равна экспоненте, в которой вместо энергии стоит dE — если условно принять нижний уровень за основное состояние (считать, что для него E=0 — в случае с потенциальной энергией именно это и можно сделать), как раз и получим, что вероятность попасть в состояние с энергией dE равна exp(-dE/T), только нормировка C здесь будет пересчитана.
